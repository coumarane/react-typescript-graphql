{"ast":null,"code":"class ContactLocalStorage {\n  constructor() {\n    this.key = \"contacts\";\n\n    this.fetchContacts = () => {\n      const dbcontacts = localStorage.getItem(this.key);\n\n      if (dbcontacts) {\n        const contacts = JSON.parse(dbcontacts);\n        return contacts;\n      }\n\n      return null;\n    };\n\n    this.getById = id => {\n      const dbcontacts = this.fetchContacts();\n\n      if (dbcontacts) {\n        const contact = dbcontacts.filter(item => item.id === id);\n        return contact[0];\n      }\n\n      return null;\n    };\n\n    this.saveContact = contact => {\n      let auto_id = 1; // console.log(`localStorageService::saveContact=>contact ${JSON.stringify(contact)}`);\n\n      let contacts = [];\n      const dbcontacts = this.fetchContacts();\n\n      if (dbcontacts) {\n        contacts = dbcontacts;\n        auto_id = contacts.length + 1;\n      }\n\n      contact.id = auto_id;\n      contacts.push(contact);\n      this.saveContacts(contacts);\n    };\n\n    this.updateContact = (id, contact) => {\n      let dbcontacts = this.fetchContacts();\n\n      if (dbcontacts) {\n        let existingContact = dbcontacts.find(x => x.id === id);\n        const index = dbcontacts.findIndex(x => x.id === id);\n\n        if (existingContact) {\n          existingContact.name = contact.name;\n          existingContact.email = contact.email;\n          existingContact.dateOfBirth = contact.dateOfBirth;\n          dbcontacts[index] = existingContact;\n        }\n\n        this.saveContacts(dbcontacts);\n      }\n    };\n\n    this.deleteById = id => {\n      const dbcontacts = this.fetchContacts();\n\n      if (dbcontacts) {\n        const contacts = dbcontacts.filter(item => item.id !== id);\n        this.saveContacts(contacts);\n      }\n    };\n\n    this.saveContacts = contacts => {\n      localStorage.setItem(this.key, JSON.stringify(contacts));\n    };\n\n    this.clearData = () => {\n      localStorage.removeItem(this.key);\n    };\n  } //#endregion\n\n\n}\n\nconst ContactLocalStorageService = new ContactLocalStorage();\nexport default ContactLocalStorageService;","map":{"version":3,"sources":["/Users/coumar/Documents/Dev/Reactjs/react-typescript-graphql/client/src/services/contactLocalStorageService.ts"],"names":["ContactLocalStorage","key","fetchContacts","dbcontacts","localStorage","getItem","contacts","JSON","parse","getById","id","contact","filter","item","saveContact","auto_id","length","push","saveContacts","updateContact","existingContact","find","x","index","findIndex","name","email","dateOfBirth","deleteById","setItem","stringify","clearData","removeItem","ContactLocalStorageService"],"mappings":"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","sourcesContent":["import { IContact } from \"../models/contact\";\n\nclass ContactLocalStorage {\n  private key: string = \"contacts\"\n\n  //#region query\n  fetchContacts = () => {\n    const dbcontacts = localStorage.getItem(this.key);\n    if (dbcontacts) {\n      const contacts: IContact[] = JSON.parse(dbcontacts);\n      return contacts;\n    }\n    return null;\n  };\n\n  getById = (id: number) => {\n    const dbcontacts = this.fetchContacts()\n    if (dbcontacts) {\n      const contact = dbcontacts.filter(item => item.id === id)\n      return contact[0]\n    }\n    return null\n  }\n  //#endregion\n\n  //#region command\n  saveContact = (contact: IContact) => {\n    let auto_id: number = 1;\n\n    // console.log(`localStorageService::saveContact=>contact ${JSON.stringify(contact)}`);\n    let contacts: IContact[] = [];\n    const dbcontacts = this.fetchContacts();\n    if (dbcontacts) {\n      contacts = dbcontacts;\n      auto_id = contacts.length + 1\n    }\n    contact.id = auto_id;\n    contacts.push(contact);\n    this.saveContacts(contacts)\n  };\n\n  updateContact = (id: number, contact: IContact) => {\n    let dbcontacts = this.fetchContacts();\n    if (dbcontacts) {\n      let existingContact = dbcontacts.find(x => x.id === id)\n      const index = dbcontacts.findIndex(x => x.id === id)\n      if (existingContact) {\n        existingContact.name = contact.name\n        existingContact.email = contact.email\n        existingContact.dateOfBirth = contact.dateOfBirth\n        dbcontacts[index] = existingContact\n      }\n      this.saveContacts(dbcontacts)\n    }\n  };\n\n  deleteById = (id: number) => {\n    const dbcontacts = this.fetchContacts()\n    if (dbcontacts) {\n      const contacts = dbcontacts.filter(item => item.id !== id)\n      this.saveContacts(contacts)\n    }\n  }\n\n  saveContacts = (contacts: IContact[] ) => {\n    localStorage.setItem(this.key, JSON.stringify(contacts));\n  }\n\n  clearData = () => {\n    localStorage.removeItem(this.key)\n  }\n  //#endregion\n}\n\nconst ContactLocalStorageService = new ContactLocalStorage();\nexport default ContactLocalStorageService;\n"]},"metadata":{},"sourceType":"module"}