{"ast":null,"code":"var _jsxFileName = \"/Users/coumar/Documents/Dev/Reactjs/react-typescript-graphql/client/src/components/contact/contact.tsx\";\nimport * as React from \"react\";\nimport ContactList from \"../contact/contact.list\";\nimport ContactCreation from \"../contact/contact.creation\";\nimport ContactLocalStorageService from \"../../services/contactLocalStorageService\";\nimport apolloClient from \"../../graphql/apollo.client\";\nimport { ContactListQuery } from \"../../graphql/queries/contact.queries\";\nimport { DeleteContactMutation } from \"../../graphql/mutations/contact.mutations\";\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderDeleteAllButton = () => {\n      const contacts = this.state.contacts;\n\n      if (contacts && contacts.length > 0) {\n        return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-md-12\",\n          style: {\n            marginBottom: \"10px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: this.handleDeleteAll,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"Delete all\"))));\n      } else {\n        return null;\n      }\n    };\n\n    this.handleDelete = id => e => {\n      ContactLocalStorageService.deleteById(id);\n      apolloClient.mutate({\n        mutation: DeleteContactMutation,\n        variables: {\n          id: id\n        },\n        refetchQueries: [{\n          query: ContactListQuery\n        }]\n      }).then(result => {\n        console.log(`Deleted successfully...`);\n      });\n    };\n\n    this.handleEdit = id => e => {\n      this.setState({\n        editContactId: id\n      });\n    };\n\n    this.handleDeleteAll = () => {\n      ContactLocalStorageService.clearData();\n    };\n\n    const initialContcatState = {\n      id: 0,\n      name: \"\",\n      email: \"\",\n      dateOfBirth: \"\"\n    };\n    this.state = {\n      contacts: [],\n      editContact: initialContcatState,\n      editContactId: 0\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"nav\", {\n      className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n      href: \"/#/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, ``), \"React Typescript App\")), React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"col-md-2 d-none d-md-block bg-light sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sidebar-sticky\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"nav flex-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"nav-link active\",\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, ``), \"Users\", ` `, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"(current)\"))))))), React.createElement(\"div\", {\n      role: \"main\",\n      className: \"col-md-9 ml-sm-auto col-lg-10 px-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Contact\")), React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        paddingTop: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, ``)), React.createElement(ContactCreation, {\n      editContactId: this.state.editContactId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(ContactList, {\n      handleDelete: this.handleDelete,\n      handleEdit: this.handleEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Contact;","map":{"version":3,"sources":["/Users/coumar/Documents/Dev/Reactjs/react-typescript-graphql/client/src/components/contact/contact.tsx"],"names":["React","ContactList","ContactCreation","ContactLocalStorageService","apolloClient","ContactListQuery","DeleteContactMutation","Contact","Component","constructor","props","renderDeleteAllButton","contacts","state","length","marginBottom","handleDeleteAll","handleDelete","id","e","deleteById","mutate","mutation","variables","refetchQueries","query","then","result","console","log","handleEdit","setState","editContactId","clearData","initialContcatState","name","email","dateOfBirth","editContact","render","paddingTop"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport ContactList from \"../contact/contact.list\";\nimport { IContact } from \"../../models/contact\";\nimport ContactCreation from \"../contact/contact.creation\";\nimport ContactLocalStorageService from \"../../services/contactLocalStorageService\";\nimport apolloClient from \"../../graphql/apollo.client\";\nimport { ContactListQuery } from \"../../graphql/queries/contact.queries\";\nimport { DeleteContactMutation } from \"../../graphql/mutations/contact.mutations\";\n\ninterface IOwnState {\n  contacts: IContact[];\n  editContact?: IContact;\n  editContactId?: number;\n}\n\ntype IUnionProps = RouteComponentProps<any>;\n\nclass Contact extends React.Component<IUnionProps, IOwnState> {\n  constructor(props: IUnionProps) {\n    super(props);\n\n    const initialContcatState: IContact = {\n      id: 0,\n      name: \"\",\n      email: \"\",\n      dateOfBirth: \"\"\n    };\n\n    this.state = {\n      contacts: [],\n      editContact: initialContcatState,\n      editContactId: 0\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <a className=\"navbar-brand col-sm-3 col-md-2 mr-0\" href=\"/#/\">\n            <i className=\"fa fa-home\">{``}</i>React Typescript App\n          </a>\n        </nav>\n\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <nav className=\"col-md-2 d-none d-md-block bg-light sidebar\">\n              <div className=\"sidebar-sticky\">\n                <ul className=\"nav flex-column\">\n                  <li className=\"nav-item\">\n                    <a className=\"nav-link active\" href=\"/\">\n                      <i className=\"fa fa-users\">{``}</i>Users{` `}\n                      <span className=\"sr-only\">(current)</span>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </nav>\n          </div>\n\n          <div role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\n            {/* <div className=\"row\" style={{ paddingTop: \"2px\" }}>\n              <div className=\"col-md-12\">{``}</div>\n            </div> */}\n            <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n              <h1 className=\"h2\">Contact</h1>\n            </div>\n            <div className=\"row\" style={{ paddingTop: \"50px\" }}>\n              <div className=\"col-md-12\">{``}</div>\n            </div>\n  \n            \n            <ContactCreation\n              editContactId={this.state.editContactId}\n            />\n            \n            <ContactList\n              handleDelete={this.handleDelete}\n              handleEdit={this.handleEdit}\n            />\n\n            {/* {this.renderDeleteAllButton()} */}\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  renderDeleteAllButton = () => {\n    const { contacts } = this.state\n    if (contacts && contacts.length > 0) {\n      return (\n        <>\n          <div className=\"row\">\n            <div className=\"col-md-12\" style={{ marginBottom: \"10px\" }}>\n              <button className=\"btn btn-warning\" onClick={this.handleDeleteAll}>\n                Delete all\n              </button>\n            </div>\n          </div>\n        </>\n      );\n    } else {\n      return null\n    }\n  };\n\n  handleDelete = (id: number) => (e: React.MouseEvent) => {\n    ContactLocalStorageService.deleteById(id);\n    apolloClient.mutate({mutation: DeleteContactMutation, variables: {\n      id: id,\n    }, refetchQueries: [{query: ContactListQuery}]}).then(result => {\n      console.log(`Deleted successfully...`)\n    });\n  };\n\n  handleEdit = (id: number) => (e: React.MouseEvent) => {    \n    this.setState({editContactId: id})\n  };\n\n  handleDeleteAll = () => {\n    ContactLocalStorageService.clearData();\n  };\n}\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}